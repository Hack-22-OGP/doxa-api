org: edyw7x
app: doxa-api
service: doxa-api
frameworkVersion: "2 || 3"

plugins:
  - serverless-offline
  - serverless-dynamodb-local

custom:
  serverless-offline:
    httpPort: 3000
  dynamodb:
    start:
      port: 5000
      inMemory: true
      migrate: true
    stages:
      - dev

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  lambdaHashingVersion: "20201221"
  region: ap-southeast-1
  environment:
    DOXA_POLL_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DOXA_POLL_TABLE}"

functions:
  mock1:
    handler: src/context-handlers/mock-api.mock1
    events:
      - http:
          path: /mock-api/mock1
          method: get
  createPoll:
    handler: src/context-handlers/poll.createPoll
    memorySize: 128
    events:
      - http:
          path: /poll
          method: post
  getPollList:
    handler: src/context-handlers/poll.getPollList
    memorySize: 128
    events:
      - http:
          path: /poll
          method: get
  getPollDetail:
    handler: src/context-handlers/poll.getPollDetail
    memorySize: 128
    events:
      - http:
          path: /poll/{id}
          method: get

resources:
  Resources:
    DoxaPollDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DOXA_POLL_TABLE}
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
