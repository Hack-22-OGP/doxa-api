app: doxa-api
service: doxa-api
frameworkVersion: '2 || 3'

plugins:
  - serverless-offline
  - serverless-dynamodb-local

custom:
  serverless-offline:
    httpPort: 3000
  dynamodb:
    start:
      port: 5000
      inMemory: true
      migrate: true
    stages:
      - dev

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  lambdaHashingVersion: '20201221'
  region: ap-southeast-1
  environment:
    DOXA_POLL_TABLE: ${self:service}-poll-${opt:stage, self:provider.stage}
    DOXA_VOTE_USER_TABLE: ${self:service}-vote-user-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DOXA_POLL_TABLE}'
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DOXA_VOTE_USER_TABLE}'

functions:
  getSgIdMock:
    handler: src/context-handlers/main.handlerIndex
    memorySize: 128
    events:
      - http:
          path: /
          method: get
  createPoll:
    handler: src/context-handlers/poll.handlerCreatePoll
    memorySize: 128
    events:
      - http:
          path: /poll
          method: post
          cors:
            origin: '*' # <-- Specify allowed origin
  getPollList:
    handler: src/context-handlers/poll.handlerGetPollList
    memorySize: 128
    events:
      - http:
          path: /poll
          method: get
          cors:
            origin: '*' # <-- Specify allowed origin
  getPollDetail:
    handler: src/context-handlers/poll.handlerGetPollDetail
    memorySize: 128
    events:
      - http:
          path: /poll/{id}
          method: get
          cors:
            origin: '*' # <-- Specify allowed origin
  createPollVote:
    handler: src/context-handlers/vote.handlerCreateVote
    memorySize: 128
    events:
      - http:
          path: /poll/{id}/vote
          method: post
          cors:
            origin: '*' # <-- Specify allowed origin
  getPollCheckVote:
    handler: src/context-handlers/vote.handlerGetPollCheckVote
    memorySize: 128
    events:
      - http:
          path: /poll/{id}/check-vote
          method: get
          cors:
            origin: '*' # <-- Specify allowed origin
  getSgIdCallback:
    handler: src/context-handlers/sgid.handlerCallback
    memorySize: 128
    events:
      - http:
          path: /sgid/callback
          method: get
          cors:
            origin: '*' # <-- Specify allowed origin

resources:
  Resources:
    DoxaPollDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DOXA_POLL_TABLE}
        AttributeDefinitions:
          - AttributeName: 'id'
            AttributeType: 'S'
        KeySchema:
          - AttributeName: 'id'
            KeyType: 'HASH'
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    DoxaVoteUserDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DOXA_VOTE_USER_TABLE}
        AttributeDefinitions:
          - AttributeName: 'id'
            AttributeType: 'S'
        KeySchema:
          - AttributeName: 'id'
            KeyType: 'HASH'
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
